{"version":3,"sources":["webpack://keksobooking/./source/js/generation-random-values.js","webpack://keksobooking/./source/js/generation-similar-offers.js","webpack://keksobooking/./source/js/generation-similar-popup.js","webpack://keksobooking/./node_modules/ymaps/dist/ymaps.esm.js","webpack://keksobooking/./source/js/map.js"],"names":["getRandomArbitrary","min","max","Math","floor","random","getRandomArbitraryQaString","qualityNumber","randomValue","toFixed","getRandomArrayElement","array","length","AVATARS","TITLES","TYPES","CHECKINS","CHECKOUTS","FEATURES","DESCRIPTIONS","PHOTOS","createRandomOffers","offers","i","push","author","avatar","offer","title","address","location","x","y","price","type","rows","quest","checkin","checkout","features","description","photos","mapCanvas","document","querySelector","popup","content","similarPopups","mapCanvasFragment","createDocumentFragment","forEach","popupElement","cloneNode","textContent","children","src","appendChild","load","arguments","undefined","getNsParamValue","results","match","decodeURIComponent","replace","this","promise","Promise","resolve","reject","scriptElement","createElement","onload","onerror","body","then","ns","eval","concat","ymaps","ready","maps","map","Map","center","zoom","searchControlProvider","markerElement","markerOffset","markerPosition","applyDelta","event","delta","get","applyMarkerPosition","style","left","top","console","log","util","Dragger","autoStartElement","events","add","position","offsetLeft","offsetTop","markerGlobalPosition","converter","pageToGlobal","mapGlobalPixelCenter","getGlobalPixelCenter","mapContainerSize","container","getSize","mapContainerHalfSize","bounds","point","geoPosition","options","fromGlobalPixels","getZoom","tileCoordinates","coords","tileSize","getTileCoordinate","alert","join","init","catch","err"],"mappings":"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","file":"main.js","sourcesContent":["/* eslint-disable no-unused-vars */\n\n//Функция возвращает случайное число\n\nconst getRandomArbitrary = function (min, max) { \n  return Math.floor(Math.random() * (max - min) + min);  \n};\n\n//Функция возвращает максимальную длину строки\n\nconst checkMaxLengthString = function (string, maxLength) {\n  if (string.length > maxLength) {\n    return;\n  }\n\n  return string.length;\n};\n\n\n//Функция возвращает число с плавающей точкой из диапазона от.до с указанным количеством знаков после запятой\n\nconst getRandomArbitraryQaString = function (min, max, qualityNumber) {\n  const randomValue = Math.random() * (max - min) + min;\n\n  if (min > max || min <= 0 || min == max) {\n    return;\n  }\n\n  return randomValue.toFixed(qualityNumber);\n};\n\n// Функция возвращает случайное значение в массиве\n\nconst getRandomArrayElement = function (array) {  \n  const randomIndex = getRandomArbitrary(0, array.length-1);\n  return array[randomIndex];\n};\n\nexport {getRandomArbitrary, getRandomArbitraryQaString, getRandomArrayElement}; ","/* eslint-disable no-unused-vars */\n\nimport {getRandomArbitrary, getRandomArbitraryQaString, getRandomArrayElement} from './generation-random-values.js';\n\n//Выполненное задание по сгенерированию десяти рендомных объектов по заданым условиям + сложить в массив\n\nconst AVATARS = [\n  'img/avatars/user01.png',\n  'img/avatars/user02.png',\n  'img/avatars/user03.png',\n  'img/avatars/user04.png',\n  'img/avatars/user05.png',\n  'img/avatars/user06.png',\n  'img/avatars/user07.png',\n  'img/avatars/user08.png',\n];\nconst TITLES = ['Дом 100 кв.м', 'Квартира 23 кв.м', 'Гараж'];\nconst TYPES = ['palace', 'flat', 'house', 'hyngalow'];\nconst CHECKINS = ['12:00', '13:00', '14:00'];\nconst CHECKOUTS = ['12:00', '13:00', '14:00'];\nconst FEATURES = ['wift','wishaser','parking','washer','elevator','conditioner'];\nconst DESCRIPTIONS = ['Все четко','Хорошая квартира не дорого','Огромный дом для тусы'];\nconst PHOTOS = ['img/avatars/default.png'];\nconst LOCATION = {x: [35.555, 36.666], y: [105.555, 106.666]};\n\n\n\nconst createRandomOffers = (length) => {\n  const offers = [];\n\n  for (let i = 0; i < length; i++) {\n  \n    offers.push({\n\n      author: {\n        avatar: getRandomArrayElement(AVATARS),\n      },\n\n      offer: {\n        title: getRandomArrayElement(TITLES),\n        address: `${location.x}, ${location.y}`,\n        price: getRandomArbitrary(10, 1000),\n        type: getRandomArrayElement(TYPES),\n        rows: getRandomArbitrary(1, 10),\n        quest: getRandomArbitrary(20, 50),\n        checkin: getRandomArrayElement(CHECKINS),\n        checkout: getRandomArrayElement(CHECKOUTS),\n        features: getRandomArrayElement(FEATURES),\n        description: getRandomArrayElement(DESCRIPTIONS),\n        photos: getRandomArrayElement(PHOTOS),\n      },\n\n      location: {\n        x: getRandomArbitraryQaString(35.65000, 35.70000, 8),\n        y: getRandomArbitraryQaString(139.7000, 139.8000, 8),\n      },\n\n    });\n  }\n  return offers;\n};\n\nconst offers = createRandomOffers(10);\n\nexport {createRandomOffers};","import {createRandomOffers} from './generation-similar-offers.js';\n\nconst mapCanvas = document.querySelector('.map__canvas');\n\nconst popup = document.querySelector('#card').content.querySelector('.popup');\n\nconst similarPopups = createRandomOffers();\n\nconst mapCanvasFragment = document.createDocumentFragment();\n\n\nsimilarPopups.forEach((offer) => { // Функция вызывается ради побочного эффекта\n  const popupElement = popup.cloneNode(true);\n\n  popupElement.querySelector('.popup__title').textContent = offer.offer.title;\n  popupElement.querySelector('.popup__text--address').textContent = offer.offer.address;\n  popupElement.querySelector('.popup__text--price').textContent = `${offer.offer.price} Р/ночь`;\n  popupElement.querySelector('.popup__type').textContent = offer.offer.type;\n  popupElement.querySelector('.popup__text--capacity').textContent = `${offer.offer.rows} комнат для ${offer.offer.quest} гостей`;\n  popupElement.querySelector('.popup__text--time').textContent = `Заезд после ${offer.offer.checkin}, выезд до ${offer.offer.checkout}`;\n  popupElement.querySelector('.popup__features').children.textContent = offer.offer.features;\n  popupElement.querySelector('.popup__description').textContent = offer.offer.description;\n  popupElement.querySelector('.popup__photos').src = offer.offer.photos;\n  popupElement.querySelector('.popup__avatar').src = offer.author.avatar;\n\n  mapCanvasFragment.appendChild(popupElement);\n});\n\nmapCanvas.appendChild(mapCanvasFragment);\n\nexport {similarPopups}\n","var ymaps$1 = {\n  load: function load() {\n    var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '//api-maps.yandex.ru/2.1/?lang=en_RU';\n\n    var getNsParamValue = function getNsParamValue() {\n      var results = src.match(/[\\\\?&]ns=([^&#]*)/);\n      return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    };\n\n    if (!this.promise) {\n      this.promise = new Promise(function (resolve, reject) {\n        var scriptElement = document.createElement('script');\n        scriptElement.onload = resolve;\n        scriptElement.onerror = reject;\n        scriptElement.type = 'text/javascript';\n        scriptElement.src = src;\n        document.body.appendChild(scriptElement);\n      }).then(function () {\n        var ns = getNsParamValue();\n\n        if (ns && ns !== 'ymaps') {\n          (0, eval)(\"var ymaps = \".concat(ns, \";\"));\n        }\n\n        return new Promise(function (resolve) {\n          return ymaps.ready(resolve);\n        });\n      });\n    }\n\n    return this.promise;\n  }\n};\n\nexport default ymaps$1;\n","import ymaps from \"ymaps\";\n\nfunction init(maps) {\n  let map = new maps.Map(\n    \"map\",\n    {\n      center: [55.819543, 37.611619],\n      zoom: 10,\n    },\n    {\n      searchControlProvider: \"yandex#search\",\n    }\n  );\n\n  const markerElement = document.querySelector(\".marker\");\n  console.log(\"markerElement\", markerElement);\n  const dragger = new maps.util.Dragger({\n    // Драггер будет автоматически запускаться при нажатии на элемент 'marker'.\n    autoStartElement: markerElement,\n  });\n\n  // Смещение маркера относительно курсора.\n  let markerOffset, markerPosition;\n\n  dragger.events\n    .add(\"start\", onDraggerStart)\n    .add(\"move\", onDraggerMove)\n    .add(\"stop\", onDraggerEnd);\n\n  function onDraggerStart(event) {\n    const position = event.get(\"position\");\n    // Сохраняем смещение маркера относительно точки начала драга.\n    markerOffset = [\n      position[0] - markerElement.offsetLeft,\n      position[1] - markerElement.offsetTop,\n    ];\n    markerPosition = [\n      position[0] - markerOffset[0],\n      position[1] - markerOffset[1],\n    ];\n\n    applyMarkerPosition();\n  }\n\n  function onDraggerMove(event) {\n    applyDelta(event);\n  }\n\n  function onDraggerEnd(event) {\n    applyDelta(event);\n    markerPosition[0] += markerOffset[0];\n    markerPosition[1] += markerOffset[1];\n    // Переводим координаты страницы в глобальные пиксельные координаты.\n    let markerGlobalPosition = map.converter.pageToGlobal(markerPosition);\n    // Получаем центр карты в глобальных пиксельных координатах.\n    const mapGlobalPixelCenter = map.getGlobalPixelCenter();\n    // Получением размер контейнера карты на странице.\n    const mapContainerSize = map.container.getSize();\n    const mapContainerHalfSize = [\n      mapContainerSize[0] / 2,\n      mapContainerSize[1] / 2,\n    ];\n    // Вычисляем границы карты в глобальных пиксельных координатах.\n    const mapGlobalPixelBounds = [\n      [\n        mapGlobalPixelCenter[0] - mapContainerHalfSize[0],\n        mapGlobalPixelCenter[1] - mapContainerHalfSize[1],\n      ],\n      [\n        mapGlobalPixelCenter[0] + mapContainerHalfSize[0],\n        mapGlobalPixelCenter[1] + mapContainerHalfSize[1],\n      ],\n    ];\n    // Проверяем, что завершение работы драггера произошло в видимой области карты.\n    if (containsPoint(mapGlobalPixelBounds, markerGlobalPosition)) {\n      // Теперь переводим глобальные пиксельные координаты в геокоординаты с учетом текущего уровня масштабирования карты.\n      let geoPosition = map.options\n        .get(\"projection\")\n        .fromGlobalPixels(markerGlobalPosition, map.getZoom());\n      // Получаем уровень зума карты.\n      const zoom = map.getZoom();\n      // Получаем координаты тайла.\n      const tileCoordinates = getTileCoordinate(\n        markerGlobalPosition,\n        zoom,\n        256\n      );\n      alert(\n        [\n          \"Координаты: \" + geoPosition,\n          \"Уровень зума: \" + zoom,\n          \"Глобальные пиксельные координаты: \" + markerGlobalPosition,\n          \"Координаты тайла: \" + tileCoordinates,\n        ].join(\" \")\n      );\n    }\n  }\n\n  function applyDelta(event) {\n    // Поле 'delta' содержит разницу между положениями текущего и предыдущего события драггера.\n    let delta = event.get(\"delta\");\n    markerPosition[0] += delta[0];\n    markerPosition[1] += delta[1];\n    applyMarkerPosition();\n  }\n\n  function applyMarkerPosition() {\n    markerElement.style.left = `${markerPosition[0]}px`;\n    markerElement.style.top = `${markerPosition[1]}px`;\n  }\n\n  function containsPoint(bounds, point) {\n    return (\n      point[0] >= bounds[0][0] &&\n      point[0] <= bounds[1][0] &&\n      point[1] >= bounds[0][1] &&\n      point[1] <= bounds[1][1]\n    );\n  }\n\n  function getTileCoordinate(coords, zoom, tileSize) {\n    return [\n      Math.floor((coords[0] * zoom) / tileSize),\n      Math.floor((coords[1] * zoom) / tileSize),\n    ];\n  }\n}\n\nymaps\n  .load()\n  .then((maps) => {\n    init(maps);\n  })\n  .catch((err) => console.log(\"error\", err));\n"],"sourceRoot":""}